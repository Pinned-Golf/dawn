{% doc %}
  @prompt
    create me a product grid where I can change the number of products on a row & columns. I also want to be able to see reviews, and variant options underneath the product name & price. If there is a sale price, that should be red. I also want the option to pick where I put the sale badge and it should be a red oval. , Do not show the variant title and make the variants colored circles. Also, remove the (4.5) and just have the number of reviews each product has with the stars. 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-grid-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  }

  .ai-product-grid-container-{{ ai_gen_id }} {
    max-width: {{ settings.page_width }}px;
    margin: 0 auto;
    padding: 0 {{ settings.spacing_grid_horizontal }}px;
  }

  .ai-product-grid-list-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ settings.spacing_grid_horizontal }}px {{ settings.spacing_grid_vertical }}px;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  @media screen and (max-width: 749px) {
    .ai-product-grid-list-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }
  }

  .ai-product-card-{{ ai_gen_id }} {
    position: relative;
    background-color: {{ settings.color_schemes[settings.card_color_scheme].settings.background }};
    border-radius: {{ settings.card_corner_radius }}px;
    border: {{ settings.card_border_thickness }}px solid rgba({{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'red' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'green' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'blue' }}, {{ settings.card_border_opacity | divided_by: 100.0 }});
    box-shadow: {{ settings.card_shadow_horizontal_offset }}px {{ settings.card_shadow_vertical_offset }}px {{ settings.card_shadow_blur }}px rgba({{ settings.color_schemes[settings.card_color_scheme].settings.shadow | color_extract: 'red' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.shadow | color_extract: 'green' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.shadow | color_extract: 'blue' }}, {{ settings.card_shadow_opacity | divided_by: 100.0 }});
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .ai-product-card-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
  }

  .ai-product-card-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    padding: {{ settings.card_image_padding }}px;
    overflow: hidden;
  }

  .ai-product-card-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    border-radius: {{ settings.media_radius }}px;
    transition: transform 0.3s ease;
  }

  .ai-product-card-{{ ai_gen_id }}:hover .ai-product-card-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-product-badge-{{ ai_gen_id }} {
    position: absolute;
    z-index: 2;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    background-color: #ff0000;
    color: #ffffff;
  }

  .ai-product-badge-{{ ai_gen_id }}--top-left {
    top: {{ settings.card_image_padding | plus: 8 }}px;
    left: {{ settings.card_image_padding | plus: 8 }}px;
  }

  .ai-product-badge-{{ ai_gen_id }}--top-right {
    top: {{ settings.card_image_padding | plus: 8 }}px;
    right: {{ settings.card_image_padding | plus: 8 }}px;
  }

  .ai-product-badge-{{ ai_gen_id }}--bottom-left {
    bottom: {{ settings.card_image_padding | plus: 8 }}px;
    left: {{ settings.card_image_padding | plus: 8 }}px;
  }

  .ai-product-badge-{{ ai_gen_id }}--bottom-right {
    bottom: {{ settings.card_image_padding | plus: 8 }}px;
    right: {{ settings.card_image_padding | plus: 8 }}px;
  }

  .ai-product-card-content-{{ ai_gen_id }} {
    padding: 16px;
    text-align: {{ settings.card_text_alignment }};
    color: {{ settings.color_schemes[settings.card_color_scheme].settings.text }};
  }

  .ai-product-card-title-{{ ai_gen_id }} {
    margin: 0 0 8px;
    font-size: 16px;
    font-weight: 600;
    line-height: 1.3;
  }

  .ai-product-card-title-{{ ai_gen_id }} a {
    color: inherit;
    text-decoration: none;
  }

  .ai-product-card-title-{{ ai_gen_id }} a:hover {
    text-decoration: underline;
  }

  .ai-product-card-price-{{ ai_gen_id }} {
    margin: 0 0 12px;
    font-size: 14px;
    font-weight: 500;
  }

  .ai-product-card-price-original-{{ ai_gen_id }} {
    text-decoration: line-through;
    opacity: 0.7;
    margin-right: 8px;
  }

  .ai-product-card-price-sale-{{ ai_gen_id }} {
    color: #ff0000;
    font-weight: 600;
  }

  .ai-product-card-reviews-{{ ai_gen_id }} {
    margin: 0 0 12px;
    display: flex;
    align-items: center;
    justify-content: {{ settings.card_text_alignment }};
    gap: 4px;
    font-size: 14px;
  }

  .ai-product-card-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 2px;
  }

  .ai-product-card-star-{{ ai_gen_id }} {
    width: 14px;
    height: 14px;
    fill: #ffd700;
  }

  .ai-product-card-star-empty-{{ ai_gen_id }} {
    fill: #e0e0e0;
  }

  .ai-product-card-review-count-{{ ai_gen_id }} {
    color: {{ settings.color_schemes[settings.card_color_scheme].settings.text }};
    opacity: 0.7;
    margin-left: 4px;
  }

  .ai-product-card-variants-{{ ai_gen_id }} {
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    justify-content: {{ settings.card_text_alignment }};
  }

  .ai-product-card-variant-color-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid rgba({{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'red' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'green' }}, {{ settings.color_schemes[settings.card_color_scheme].settings.text | color_extract: 'blue' }}, 0.3);
    display: inline-block;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .ai-product-card-variant-color-{{ ai_gen_id }}:hover {
    transform: scale(1.1);
  }

  .ai-product-card-empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ settings.color_schemes[settings.card_color_scheme].settings.text }};
    opacity: 0.7;
  }

  .ai-product-card-placeholder-{{ ai_gen_id }} {
    background-color: #f4f4f4;
    border-radius: {{ settings.media_radius }}px;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 200px;
  }

  .ai-product-card-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.3;
  }
{% endstyle %}

<div class="ai-product-grid-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-product-grid-container-{{ ai_gen_id }}">
    {% if block.settings.collection != blank %}
      <ul class="ai-product-grid-list-{{ ai_gen_id }}">
        {% for product in block.settings.collection.products limit: block.settings.products_to_show %}
          <li class="ai-product-card-{{ ai_gen_id }}">
            <div class="ai-product-card-image-wrapper-{{ ai_gen_id }}">
              {% if product.featured_image %}
                <img
                  src="{{ product.featured_image | image_url: width: 600 }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  class="ai-product-card-image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="{{ product.featured_image.width }}"
                  height="{{ product.featured_image.height }}"
                >
              {% else %}
                <div class="ai-product-card-placeholder-{{ ai_gen_id }}">
                  {{ 'product-1' | placeholder_svg_tag }}
                </div>
              {% endif %}

              {% if product.compare_at_price > product.price and block.settings.show_sale_badge %}
                <div class="ai-product-badge-{{ ai_gen_id }} ai-product-badge-{{ ai_gen_id }}--{{ block.settings.sale_badge_position }}">
                  Sale
                </div>
              {% endif %}
            </div>

            <div class="ai-product-card-content-{{ ai_gen_id }}">
              <h3 class="ai-product-card-title-{{ ai_gen_id }}">
                <a href="{{ product.url }}">{{ product.title }}</a>
              </h3>

              <div class="ai-product-card-price-{{ ai_gen_id }}">
                {% if product.compare_at_price > product.price %}
                  <span class="ai-product-card-price-original-{{ ai_gen_id }}">
                    {{ product.compare_at_price | money }}
                  </span>
                  <span class="ai-product-card-price-sale-{{ ai_gen_id }}">
                    {{ product.price | money }}
                  </span>
                {% else %}
                  {{ product.price | money }}
                {% endif %}
              </div>

              {% if block.settings.show_reviews %}
                <div class="ai-product-card-reviews-{{ ai_gen_id }}">
                  <div class="ai-product-card-stars-{{ ai_gen_id }}">
                    {% assign rating = 4.5 %}
                    {% assign full_stars = rating | floor %}
                    {% assign has_half_star = rating | modulo: 1 | round %}
                    {% assign empty_stars = 5 | minus: full_stars | minus: has_half_star %}

                    {% for i in (1..full_stars) %}
                      <svg class="ai-product-card-star-{{ ai_gen_id }}" viewBox="0 0 24 24">
                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                      </svg>
                    {% endfor %}

                    {% if has_half_star == 1 %}
                      <svg class="ai-product-card-star-{{ ai_gen_id }}" viewBox="0 0 24 24">
                        <defs>
                          <linearGradient id="half-{{ ai_gen_id }}-{{ forloop.index }}">
                            <stop offset="50%" stop-color="#ffd700"/>
                            <stop offset="50%" stop-color="#e0e0e0"/>
                          </linearGradient>
                        </defs>
                        <path fill="url(#half-{{ ai_gen_id }}-{{ forloop.index }})" d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                      </svg>
                    {% endif %}

                    {% for i in (1..empty_stars) %}
                      <svg class="ai-product-card-star-{{ ai_gen_id }} ai-product-card-star-empty-{{ ai_gen_id }}" viewBox="0 0 24 24">
                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                      </svg>
                    {% endfor %}
                  </div>
                  <span class="ai-product-card-review-count-{{ ai_gen_id }}">127 reviews</span>
                </div>
              {% endif %}

              {% if block.settings.show_variants and product.variants.size > 1 %}
                <div class="ai-product-card-variants-{{ ai_gen_id }}">
                  {% for option in product.options_with_values %}
                    {% if option.name == 'Color' or option.name == 'Colour' %}
                      {% for value in option.values limit: 6 %}
                        {% assign color_value = value | downcase | replace: ' ', '' %}
                        {% case color_value %}
                          {% when 'red' %}
                            {% assign color_hex = '#ff0000' %}
                          {% when 'blue' %}
                            {% assign color_hex = '#0000ff' %}
                          {% when 'green' %}
                            {% assign color_hex = '#008000' %}
                          {% when 'black' %}
                            {% assign color_hex = '#000000' %}
                          {% when 'white' %}
                            {% assign color_hex = '#ffffff' %}
                          {% when 'yellow' %}
                            {% assign color_hex = '#ffff00' %}
                          {% when 'pink' %}
                            {% assign color_hex = '#ffc0cb' %}
                          {% when 'purple' %}
                            {% assign color_hex = '#800080' %}
                          {% when 'orange' %}
                            {% assign color_hex = '#ffa500' %}
                          {% when 'brown' %}
                            {% assign color_hex = '#a52a2a' %}
                          {% when 'gray', 'grey' %}
                            {% assign color_hex = '#808080' %}
                          {% when 'navy' %}
                            {% assign color_hex = '#000080' %}
                          {% when 'beige' %}
                            {% assign color_hex = '#f5f5dc' %}
                          {% when 'cream' %}
                            {% assign color_hex = '#fffdd0' %}
                          {% when 'tan' %}
                            {% assign color_hex = '#d2b48c' %}
                          {% when 'maroon' %}
                            {% assign color_hex = '#800000' %}
                          {% when 'olive' %}
                            {% assign color_hex = '#808000' %}
                          {% when 'teal' %}
                            {% assign color_hex = '#008080' %}
                          {% when 'silver' %}
                            {% assign color_hex = '#c0c0c0' %}
                          {% when 'gold' %}
                            {% assign color_hex = '#ffd700' %}
                          {% else %}
                            {% assign color_hex = '#cccccc' %}
                        {% endcase %}
                        <span
                          class="ai-product-card-variant-color-{{ ai_gen_id }}"
                          style="background-color: {{ color_hex }};"
                          title="{{ value }}"
                        ></span>
                      {% endfor %}
                      {% break %}
                    {% endif %}
                  {% endfor %}
                </div>
              {% endif %}
            </div>
          </li>
        {% endfor %}
      </ul>
    {% else %}
      <div class="ai-product-card-empty-state-{{ ai_gen_id }}">
        <p>Select a collection to display products</p>
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Product grid",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 50,
      "step": 1,
      "label": "Products to show",
      "default": 12
    },
    {
      "type": "header",
      "content": "Grid layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "checkbox",
      "id": "show_reviews",
      "label": "Show reviews",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_variants",
      "label": "Show variant options",
      "default": true
    },
    {
      "type": "header",
      "content": "Sale badge"
    },
    {
      "type": "checkbox",
      "id": "show_sale_badge",
      "label": "Show sale badge",
      "default": true
    },
    {
      "type": "select",
      "id": "sale_badge_position",
      "label": "Sale badge position",
      "options": [
        {
          "value": "top-left",
          "label": "Top left"
        },
        {
          "value": "top-right",
          "label": "Top right"
        },
        {
          "value": "bottom-left",
          "label": "Bottom left"
        },
        {
          "value": "bottom-right",
          "label": "Bottom right"
        }
      ],
      "default": "top-left"
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Product grid"
    }
  ]
}
{% endschema %}