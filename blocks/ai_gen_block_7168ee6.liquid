{% doc %}
  @prompt
    a carousel that in desktop shows a few of the slides but in mobile just shows one. The corners of the pictures are rounded. There should be 6 different slides
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-carousel-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .ai-carousel-wrapper-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.slide_gap }}px;
  }

  .ai-carousel-slide-{{ ai_gen_id }} {
    flex: 0 0 auto;
    position: relative;
  }

  .ai-carousel-slide-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.slide_height }}px;
    object-fit: cover;
    border-radius: {{ block.settings.border_radius }}px;
    display: block;
  }

  .ai-carousel-slide-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.slide_height }}px;
    background-color: #f4f4f4;
    border-radius: {{ block.settings.border_radius }}px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-carousel-slide-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-carousel-slide-content-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    color: white;
    padding: 20px;
    border-radius: 0 0 {{ block.settings.border_radius }}px {{ block.settings.border_radius }}px;
  }

  .ai-carousel-slide-title-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 600;
    margin: 0 0 8px;
  }

  .ai-carousel-slide-description-{{ ai_gen_id }} {
    font-size: 14px;
    margin: 0;
    opacity: 0.9;
  }

  .ai-carousel-nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
    transition: background-color 0.3s ease;
  }

  .ai-carousel-nav-{{ ai_gen_id }}:hover {
    background: rgba(255, 255, 255, 1);
  }

  .ai-carousel-nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-carousel-nav-prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-carousel-nav-next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-carousel-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-carousel-dot-{{ ai_gen_id }} {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ccc;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-carousel-dot-{{ ai_gen_id }}.active {
    background: #000;
  }

  @media screen and (min-width: 750px) {
    .ai-carousel-slide-{{ ai_gen_id }} {
      width: calc((100% - ({{ block.settings.desktop_slides | minus: 1 }} * {{ block.settings.slide_gap }}px)) / {{ block.settings.desktop_slides }});
    }
  }

  @media screen and (max-width: 749px) {
    .ai-carousel-slide-{{ ai_gen_id }} {
      width: 100%;
    }

    .ai-carousel-slide-content-{{ ai_gen_id }} {
      padding: 15px;
    }

    .ai-carousel-slide-title-{{ ai_gen_id }} {
      font-size: 16px;
    }

    .ai-carousel-slide-description-{{ ai_gen_id }} {
      font-size: 13px;
    }
  }
{% endstyle %}

<image-carousel-{{ ai_gen_id }}
  class="ai-carousel-container-{{ ai_gen_id }}"
  data-desktop-slides="{{ block.settings.desktop_slides }}"
  data-mobile-slides="1"
  data-autoplay="{{ block.settings.autoplay }}"
  data-autoplay-speed="{{ block.settings.autoplay_speed }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-carousel-wrapper-{{ ai_gen_id }}">
    {% for i in (1..6) %}
      {% liquid
        assign image_key = 'slide_' | append: i | append: '_image'
        assign title_key = 'slide_' | append: i | append: '_title'
        assign description_key = 'slide_' | append: i | append: '_description'
        assign link_key = 'slide_' | append: i | append: '_link'
        
        assign slide_image = block.settings[image_key]
        assign slide_title = block.settings[title_key]
        assign slide_description = block.settings[description_key]
        assign slide_link = block.settings[link_key]
      %}

      <div class="ai-carousel-slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
        {% if slide_link != blank %}
          <a href="{{ slide_link }}">
        {% endif %}

        {% if slide_image %}
          <img
            src="{{ slide_image | image_url: width: 800 }}"
            alt="{{ slide_image.alt | escape }}"
            class="ai-carousel-slide-image-{{ ai_gen_id }}"
            loading="lazy"
            width="{{ slide_image.width }}"
            height="{{ slide_image.height }}"
          >
        {% else %}
          <div class="ai-carousel-slide-placeholder-{{ ai_gen_id }}">
            {{ 'image' | placeholder_svg_tag }}
          </div>
        {% endif %}

        {% if slide_title != blank or slide_description != blank %}
          <div class="ai-carousel-slide-content-{{ ai_gen_id }}">
            {% if slide_title != blank %}
              <h3 class="ai-carousel-slide-title-{{ ai_gen_id }}">{{ slide_title }}</h3>
            {% endif %}
            {% if slide_description != blank %}
              <p class="ai-carousel-slide-description-{{ ai_gen_id }}">{{ slide_description }}</p>
            {% endif %}
          </div>
        {% endif %}

        {% if slide_link != blank %}
          </a>
        {% endif %}
      </div>
    {% endfor %}
  </div>

  {% if block.settings.show_navigation %}
    <button class="ai-carousel-nav-{{ ai_gen_id }} ai-carousel-nav-prev-{{ ai_gen_id }}" aria-label="Previous slide">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="15,18 9,12 15,6"></polyline>
      </svg>
    </button>
    <button class="ai-carousel-nav-{{ ai_gen_id }} ai-carousel-nav-next-{{ ai_gen_id }}" aria-label="Next slide">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="9,18 15,12 9,6"></polyline>
      </svg>
    </button>
  {% endif %}

  {% if block.settings.show_dots %}
    <div class="ai-carousel-dots-{{ ai_gen_id }}">
      {% for i in (1..6) %}
        <button class="ai-carousel-dot-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}" aria-label="Go to slide {{ forloop.index }}"></button>
      {% endfor %}
    </div>
  {% endif %}
</image-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 6;
        this.autoplayInterval = null;
      }

      connectedCallback() {
        this.wrapper = this.querySelector('.ai-carousel-wrapper-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-carousel-slide-{{ ai_gen_id }}');
        this.prevBtn = this.querySelector('.ai-carousel-nav-prev-{{ ai_gen_id }}');
        this.nextBtn = this.querySelector('.ai-carousel-nav-next-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-carousel-dot-{{ ai_gen_id }}');
        
        this.desktopSlides = parseInt(this.dataset.desktopSlides) || 3;
        this.mobileSlides = parseInt(this.dataset.mobileSlides) || 1;
        this.autoplay = this.dataset.autoplay === 'true';
        this.autoplaySpeed = parseInt(this.dataset.autoplaySpeed) || 3000;

        this.setupEventListeners();
        this.updateCarousel();
        this.updateDots();

        if (this.autoplay) {
          this.startAutoplay();
        }

        window.addEventListener('resize', () => this.updateCarousel());
      }

      setupEventListeners() {
        if (this.prevBtn) {
          this.prevBtn.addEventListener('click', () => this.prevSlide());
        }
        
        if (this.nextBtn) {
          this.nextBtn.addEventListener('click', () => this.nextSlide());
        }

        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => {
          if (this.autoplay) this.startAutoplay();
        });
      }

      getCurrentSlidesPerView() {
        return window.innerWidth >= 750 ? this.desktopSlides : this.mobileSlides;
      }

      getMaxSlide() {
        return Math.max(0, this.totalSlides - this.getCurrentSlidesPerView());
      }

      updateCarousel() {
        const slidesPerView = this.getCurrentSlidesPerView();
        const slideWidth = 100 / slidesPerView;
        
        this.slides.forEach(slide => {
          slide.style.width = `${slideWidth}%`;
        });

        const maxSlide = this.getMaxSlide();
        if (this.currentSlide > maxSlide) {
          this.currentSlide = maxSlide;
        }

        const translateX = -(this.currentSlide * (100 / slidesPerView));
        this.wrapper.style.transform = `translateX(${translateX}%)`;

        this.updateNavigation();
      }

      updateNavigation() {
        const maxSlide = this.getMaxSlide();
        
        if (this.prevBtn) {
          this.prevBtn.disabled = this.currentSlide === 0;
        }
        
        if (this.nextBtn) {
          this.nextBtn.disabled = this.currentSlide >= maxSlide;
        }
      }

      updateDots() {
        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateCarousel();
          this.updateDots();
        }
      }

      nextSlide() {
        const maxSlide = this.getMaxSlide();
        if (this.currentSlide < maxSlide) {
          this.currentSlide++;
          this.updateCarousel();
          this.updateDots();
        }
      }

      goToSlide(index) {
        const maxSlide = this.getMaxSlide();
        this.currentSlide = Math.min(index, maxSlide);
        this.updateCarousel();
        this.updateDots();
      }

      startAutoplay() {
        this.stopAutoplay();
        this.autoplayInterval = setInterval(() => {
          const maxSlide = this.getMaxSlide();
          if (this.currentSlide >= maxSlide) {
            this.currentSlide = 0;
          } else {
            this.currentSlide++;
          }
          this.updateCarousel();
          this.updateDots();
        }, this.autoplaySpeed);
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
        window.removeEventListener('resize', () => this.updateCarousel());
      }
    }

    customElements.define('image-carousel-{{ ai_gen_id }}', ImageCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image carousel",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "desktop_slides",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Slides visible on desktop",
      "default": 3
    },
    {
      "type": "range",
      "id": "slide_height",
      "min": 200,
      "max": 600,
      "step": 20,
      "unit": "px",
      "label": "Slide height",
      "default": 300
    },
    {
      "type": "range",
      "id": "slide_gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between slides",
      "default": 16
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Corner radius",
      "default": 16
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-play slides",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Auto-play speed",
      "default": 3000
    },
    {
      "type": "header",
      "content": "Slide 1"
    },
    {
      "type": "image_picker",
      "id": "slide_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_1_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_1_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_1_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Slide 2"
    },
    {
      "type": "image_picker",
      "id": "slide_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_2_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_2_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_2_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Slide 3"
    },
    {
      "type": "image_picker",
      "id": "slide_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_3_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_3_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_3_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Slide 4"
    },
    {
      "type": "image_picker",
      "id": "slide_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_4_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_4_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_4_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Slide 5"
    },
    {
      "type": "image_picker",
      "id": "slide_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_5_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_5_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_5_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Slide 6"
    },
    {
      "type": "image_picker",
      "id": "slide_6_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_6_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "slide_6_description",
      "label": "Description"
    },
    {
      "type": "url",
      "id": "slide_6_link",
      "label": "Link"
    }
  ],
  "presets": [
    {
      "name": "Image carousel"
    }
  ]
}
{% endschema %}