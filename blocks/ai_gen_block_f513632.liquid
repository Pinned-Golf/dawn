{% doc %}
  @prompt
    create me a slideshow where you can see 3 different pictures on a desktop screen at once and one on mobile. Use dots to scroll. I also want the option to auto slide and toggle the time in between slides
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-slideshow-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-slideshow-wrapper-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.5s ease-in-out;
    width: 100%;
  }

  .ai-slideshow-slide-{{ ai_gen_id }} {
    flex: 0 0 calc(100% / 3);
    position: relative;
    aspect-ratio: {{ block.settings.aspect_ratio }};
  }

  .ai-slideshow-slide-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-slideshow-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-slideshow-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
  }

  .ai-slideshow-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 14px;
    border-radius: 4px;
    text-align: center;
    pointer-events: none;
  }

  .ai-slideshow-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-slideshow-dot-{{ ai_gen_id }} {
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_inactive_color }};
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .ai-slideshow-dot-{{ ai_gen_id }}:hover {
    transform: scale(1.1);
  }

  .ai-slideshow-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-slideshow-slide-{{ ai_gen_id }} {
      flex: 0 0 100%;
    }
  }
{% endstyle %}

<slideshow-{{ ai_gen_id }}
  class="ai-slideshow-container-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.autoplay }}"
  data-autoplay-speed="{{ block.settings.autoplay_speed }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-slideshow-wrapper-{{ ai_gen_id }}">
    {% for i in (1..6) %}
      {% liquid
        assign image_key = 'image_' | append: i
        assign image = block.settings[image_key]
      %}
      
      {% if image != blank %}
        <div class="ai-slideshow-slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
          <img
            src="{{ image | image_url: width: 800 }}"
            alt="{{ image.alt | escape }}"
            loading="lazy"
            width="{{ image.width }}"
            height="{{ image.height }}"
          >
        </div>
      {% else %}
        <div class="ai-slideshow-slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
          <div class="ai-slideshow-placeholder-{{ ai_gen_id }}">
            {{ 'image' | placeholder_svg_tag }}
            <div class="ai-slideshow-empty-state-{{ ai_gen_id }}">
              Add image {{ i }}
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <div class="ai-slideshow-dots-{{ ai_gen_id }}">
    {% for i in (1..6) %}
      {% liquid
        assign image_key = 'image_' | append: i
        assign image = block.settings[image_key]
      %}
      
      {% if image != blank %}
        <button
          class="ai-slideshow-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
          data-slide="{{ forloop.index0 }}"
          aria-label="Go to slide {{ i }}"
        ></button>
      {% endif %}
    {% endfor %}
  </div>
</slideshow-{{ ai_gen_id }}>

<script>
  (function() {
    class Slideshow{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.autoplayInterval = null;
        this.isAutoplay = this.dataset.autoplay === 'true';
        this.autoplaySpeed = parseInt(this.dataset.autoplaySpeed) * 1000;
      }

      connectedCallback() {
        this.wrapper = this.querySelector('.ai-slideshow-wrapper-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-slideshow-slide-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-slideshow-dot-{{ ai_gen_id }}');
        this.totalSlides = this.dots.length;

        if (this.totalSlides === 0) return;

        this.setupEventListeners();
        this.updateSlidePosition();

        if (this.isAutoplay) {
          this.startAutoplay();
        }

        this.addEventListener('mouseenter', () => {
          if (this.isAutoplay) {
            this.stopAutoplay();
          }
        });

        this.addEventListener('mouseleave', () => {
          if (this.isAutoplay) {
            this.startAutoplay();
          }
        });
      }

      setupEventListeners() {
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => {
            this.goToSlide(index);
          });
        });
      }

      goToSlide(slideIndex) {
        this.currentSlide = slideIndex;
        this.updateSlidePosition();
        this.updateDots();
      }

      nextSlide() {
        this.currentSlide = (this.currentSlide + 1) % this.totalSlides;
        this.updateSlidePosition();
        this.updateDots();
      }

      updateSlidePosition() {
        const isMobile = window.innerWidth <= 749;
        const slideWidth = isMobile ? 100 : 100 / 3;
        const translateX = -this.currentSlide * slideWidth;
        this.wrapper.style.transform = `translateX(${translateX}%)`;
      }

      updateDots() {
        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      startAutoplay() {
        if (this.totalSlides <= 1) return;
        
        this.autoplayInterval = setInterval(() => {
          this.nextSlide();
        }, this.autoplaySpeed);
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }
    }

    customElements.define('slideshow-{{ ai_gen_id }}', Slideshow{{ ai_gen_id }});

    window.addEventListener('resize', () => {
      const slideshow = document.querySelector('slideshow-{{ ai_gen_id }}');
      if (slideshow) {
        slideshow.updateSlidePosition();
      }
    });
  })();
</script>

{% schema %}
{
  "name": "Image slideshow",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "aspect_ratio",
      "label": "Aspect ratio",
      "options": [
        {
          "value": "16/9",
          "label": "16:9"
        },
        {
          "value": "4/3",
          "label": "4:3"
        },
        {
          "value": "3/2",
          "label": "3:2"
        },
        {
          "value": "1/1",
          "label": "Square"
        },
        {
          "value": "2/3",
          "label": "2:3"
        }
      ],
      "default": "16/9"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay speed",
      "default": 4
    },
    {
      "type": "header",
      "content": "Navigation dots"
    },
    {
      "type": "range",
      "id": "dot_size",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Dot size",
      "default": 12
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Inactive dot color",
      "default": "#cccccc"
    }
  ],
  "presets": [
    {
      "name": "Image slideshow"
    }
  ]
}
{% endschema %}